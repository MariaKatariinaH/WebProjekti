{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\",\n  _s = $RefreshSig$();\nimport \"./statistics-chart.scss\";\nimport { useState, useEffect } from \"react\";\nimport { BarChart } from \"@mui/x-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error] = useState(null);\n  useEffect(() => {\n    const fetchActivities = async () => {\n      const response = await fetch(\"http://localhost:5004/api/Activity/Get\");\n      const data = await response.json();\n      setActivities(data);\n      setLoading(false);\n    };\n    fetchActivities();\n  }, []);\n  const groupActivitiesByStatus = activities => {\n    const statusCounts = {\n      new: 0,\n      inprogress: 0,\n      done: 0,\n      notdoingit: 0\n    };\n    activities.forEach(activity => {\n      if (activity.status) {\n        statusCounts[activity.status.toLowerCase()] += 1;\n      }\n    });\n    return statusCounts;\n  };\n  const statusCounts = groupActivitiesByStatus(activities);\n  const uData = [statusCounts.new, statusCounts.inprogress, statusCounts.done, statusCounts.notdoingit];\n  const xLabels = [\"New\", \"In Progress\", \"Done\", \"Not Doing It\"];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Be proud of your progress.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      series: [{\n        data: uData,\n        label: \"Count\",\n        type: \"bar\",\n        color: \"#0ea4df\"\n      }],\n      xAxis: [{\n        scaleType: \"band\",\n        data: xLabels\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"qINoThVd8n+i05dQ3eEtZ6VD8v0=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["useState","useEffect","BarChart","jsxDEV","_jsxDEV","Statistics","_s","activities","setActivities","loading","setLoading","error","fetchActivities","response","fetch","data","json","groupActivitiesByStatus","statusCounts","new","inprogress","done","notdoingit","forEach","activity","status","toLowerCase","uData","xLabels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","series","label","type","color","xAxis","scaleType","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import \"./statistics-chart.scss\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BarChart } from \"@mui/x-charts\";\r\nimport { IActivity } from \"../../types/global.typing\";\r\n\r\nconst Statistics = () => {\r\n  const [activities, setActivities] = useState<IActivity[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchActivities = async () => {\r\n      const response = await fetch(\"http://localhost:5004/api/Activity/Get\");\r\n      const data = await response.json();\r\n      setActivities(data);\r\n      setLoading(false);\r\n    };\r\n    fetchActivities();\r\n  }, []);\r\n\r\n  const groupActivitiesByStatus = (activities: IActivity[]) => {\r\n    const statusCounts: { [key: string]: number } = {\r\n      new: 0,\r\n      inprogress: 0,\r\n      done: 0,\r\n      notdoingit: 0,\r\n    };\r\n    activities.forEach((activity) => {\r\n      if (activity.status) {\r\n        statusCounts[activity.status.toLowerCase()] += 1;\r\n      }\r\n    });\r\n    return statusCounts;\r\n  };\r\n\r\n  const statusCounts = groupActivitiesByStatus(activities);\r\n\r\n  const uData = [\r\n    statusCounts.new,\r\n    statusCounts.inprogress,\r\n    statusCounts.done,\r\n    statusCounts.notdoingit,\r\n  ];\r\n\r\n  const xLabels = [\"New\", \"In Progress\", \"Done\", \"Not Doing It\"];\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error fetching data</p>;\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <span>Be proud of your progress.</span>\r\n      <BarChart        \r\n        width={500}\r\n        height={300}\r\n        series={[\r\n          { data: uData, label: \"Count\", type: \"bar\", color: \"#0ea4df\" },\r\n        ]}\r\n        xAxis={[{ scaleType: \"band\", data: xLabels }]}\r\n      ></BarChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}