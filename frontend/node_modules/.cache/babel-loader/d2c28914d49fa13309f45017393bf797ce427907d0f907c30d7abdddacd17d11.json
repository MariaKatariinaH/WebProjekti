{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Status = /*#__PURE__*/function (Status) {\n  Status[\"New\"] = \"New\";\n  Status[\"InProgress\"] = \"InProgress\";\n  Status[\"Done\"] = \"Done\";\n  Status[\"NotDoingIt\"] = \"NotDoingIt\";\n  return Status;\n}(Status || {});\nconst StatisticsBarChart = ({\n  data\n}) => {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No profile data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 42\n  }, this);\n  const statusCount = {\n    New: 0,\n    InProgress: 0,\n    Done: 0,\n    NotDoingIt: 0\n  };\n  data.forEach(activity => {\n    const status = activity.status; // Cast the status to Status enum type\n    if (Object.values(Status).includes(status)) {\n      statusCount[status]++;\n    }\n  });\n  const chartData = [{\n    status: 'New',\n    count: statusCount.New\n  }, {\n    status: 'InProgress',\n    count: statusCount.InProgress\n  }, {\n    status: 'Done',\n    count: statusCount.Done\n  }, {\n    status: 'NotDoingIt',\n    count: statusCount.NotDoingIt\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsBarChart, \"xPrYw7zU0CoGCjtGXuWL2zxIwKw=\");\n_c = StatisticsBarChart;\nexport default StatisticsBarChart;\nvar _c;\n$RefreshReg$(_c, \"StatisticsBarChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Status","StatisticsBarChart","data","_s","isLoading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","statusCount","New","InProgress","Done","NotDoingIt","forEach","activity","status","Object","values","includes","chartData","count","style","width","height","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from '@mui/x-data-grid';\r\nimport { IActivity } from '../../types/global.typing';\r\nimport moment from 'moment';\r\n\r\nenum Status {\r\n  New = 'New',\r\n  InProgress = 'InProgress',\r\n  Done = 'Done',\r\n  NotDoingIt = 'NotDoingIt',\r\n}\r\n\r\ninterface IActivitiesCount {\r\n  New: number;\r\n  InProgress: number;\r\n  Done: number;\r\n  NotDoingIt: number;\r\n}\r\n\r\ninterface IActivitiesGridProps {\r\n  data: IActivity[];\r\n}\r\n\r\nconst StatisticsBarChart: React.FC<IActivitiesGridProps> = ({ data }) => {\r\n  const [isLoading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (!data || data.length === 0) return <p>No profile data</p>;\r\n\r\n  const statusCount: IActivitiesCount = {\r\n    New: 0,\r\n    InProgress: 0,\r\n    Done: 0,\r\n    NotDoingIt: 0,\r\n  };\r\n\r\n  data.forEach((activity) => {\r\n    const status = activity.status as Status; // Cast the status to Status enum type\r\n    if (Object.values(Status).includes(status)) {\r\n      statusCount[status]++;\r\n    }\r\n  });\r\n\r\n  const chartData = [\r\n    { status: 'New', count: statusCount.New },\r\n    { status: 'InProgress', count: statusCount.InProgress },\r\n    { status: 'Done', count: statusCount.Done },\r\n    { status: 'NotDoingIt', count: statusCount.NotDoingIt },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: 400 }}>\r\n      <ResponsiveContainer>\r\n        <BarChart data={chartData}>\r\n          <XAxis dataKey=\"status\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsBarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAIhGC,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA,EAANA,MAAM;AAkBX,MAAMC,kBAAkD,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAU,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE,oBAAOL,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACvC,IAAI,CAACR,IAAI,IAAIA,IAAI,CAACS,MAAM,KAAK,CAAC,EAAE,oBAAOZ,OAAA;IAAAO,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE7D,MAAME,WAA6B,GAAG;IACpCC,GAAG,EAAE,CAAC;IACNC,UAAU,EAAE,CAAC;IACbC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd,CAAC;EAEDd,IAAI,CAACe,OAAO,CAAEC,QAAQ,IAAK;IACzB,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAgB,CAAC,CAAC;IAC1C,IAAIC,MAAM,CAACC,MAAM,CAACrB,MAAM,CAAC,CAACsB,QAAQ,CAACH,MAAM,CAAC,EAAE;MAC1CP,WAAW,CAACO,MAAM,CAAC,EAAE;IACvB;EACF,CAAC,CAAC;EAEF,MAAMI,SAAS,GAAG,CAChB;IAAEJ,MAAM,EAAE,KAAK;IAAEK,KAAK,EAAEZ,WAAW,CAACC;EAAI,CAAC,EACzC;IAAEM,MAAM,EAAE,YAAY;IAAEK,KAAK,EAAEZ,WAAW,CAACE;EAAW,CAAC,EACvD;IAAEK,MAAM,EAAE,MAAM;IAAEK,KAAK,EAAEZ,WAAW,CAACG;EAAK,CAAC,EAC3C;IAAEI,MAAM,EAAE,YAAY;IAAEK,KAAK,EAAEZ,WAAW,CAACI;EAAW,CAAC,CACxD;EAED,oBACEjB,OAAA;IAAK0B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAArB,QAAA,eACzCP,OAAA,CAACF,mBAAmB;MAAAS,QAAA,eAClBP,OAAA,CAACR,QAAQ;QAACW,IAAI,EAAEqB,SAAU;QAAAjB,QAAA,gBACxBP,OAAA,CAACN,KAAK;UAACmC,OAAO,EAAC;QAAQ;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1BX,OAAA,CAACL,KAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTX,OAAA,CAACJ,OAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXX,OAAA,CAACH,MAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVX,OAAA,CAACP,GAAG;UAACoC,OAAO,EAAC,OAAO;UAACC,IAAI,EAAC;QAAS;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACP,EAAA,CA5CIF,kBAAkD;AAAA6B,EAAA,GAAlD7B,kBAAkD;AA8CxD,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}