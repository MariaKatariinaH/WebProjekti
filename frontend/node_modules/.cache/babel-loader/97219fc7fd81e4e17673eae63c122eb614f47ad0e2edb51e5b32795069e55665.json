{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useThemeProps, useTheme } from '@mui/material/styles';\nimport { DrawingContext } from '../context/DrawingProvider';\nimport { getSeriesToDisplay } from './utils';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { getLegendUtilityClass } from './chartsLegendClasses';\nimport { DefaultChartsLegend } from './DefaultChartsLegend';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', direction],\n    mark: ['mark'],\n    label: ['label'],\n    series: ['series']\n  };\n  return composeClasses(slots, getLegendUtilityClass, classes);\n};\nconst defaultProps = {\n  position: {\n    horizontal: 'middle',\n    vertical: 'top'\n  },\n  direction: 'row'\n};\nfunction ChartsLegend(inProps) {\n  const props = useThemeProps({\n    props: _extends({}, defaultProps, inProps),\n    name: 'MuiChartsLegend'\n  });\n  const {\n    position,\n    direction,\n    hidden,\n    slots,\n    slotProps\n  } = props;\n  const theme = useTheme();\n  const classes = useUtilityClasses(_extends({}, props, {\n    theme\n  }));\n  const drawingArea = React.useContext(DrawingContext);\n  const series = React.useContext(SeriesContext);\n  const seriesToDisplay = getSeriesToDisplay(series);\n  const ChartLegendRender = slots?.legend ?? DefaultChartsLegend;\n  const chartLegendRenderProps = useSlotProps({\n    elementType: ChartLegendRender,\n    externalSlotProps: slotProps?.legend,\n    additionalProps: {\n      position,\n      direction,\n      classes,\n      drawingArea,\n      series,\n      hidden,\n      seriesToDisplay\n    },\n    ownerState: {}\n  });\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * The direction of the legend layout.\r\n   * The default depends on the chart.\r\n   */\n  direction: PropTypes.oneOf(['column', 'row']),\n  /**\r\n   * Set to true to hide the legend.\r\n   * @default false\r\n   */\n  hidden: PropTypes.bool,\n  /**\r\n   * The position of the legend.\r\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }),\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.object,\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { ChartsLegend };","map":{"version":3,"names":["_extends","React","PropTypes","useSlotProps","unstable_composeClasses","composeClasses","useThemeProps","useTheme","DrawingContext","getSeriesToDisplay","SeriesContext","getLegendUtilityClass","DefaultChartsLegend","jsx","_jsx","useUtilityClasses","ownerState","classes","direction","slots","root","mark","label","series","defaultProps","position","horizontal","vertical","ChartsLegend","inProps","props","name","hidden","slotProps","theme","drawingArea","useContext","seriesToDisplay","ChartLegendRender","legend","chartLegendRenderProps","elementType","externalSlotProps","additionalProps","process","env","NODE_ENV","propTypes","object","oneOf","bool","shape","isRequired"],"sources":["C:/Users/maria/Desktop/Loppuprojekti/frontend/node_modules/@mui/x-charts/esm/ChartsLegend/ChartsLegend.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSlotProps } from '@mui/base/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { useThemeProps, useTheme } from '@mui/material/styles';\r\nimport { DrawingContext } from '../context/DrawingProvider';\r\nimport { getSeriesToDisplay } from './utils';\r\nimport { SeriesContext } from '../context/SeriesContextProvider';\r\nimport { getLegendUtilityClass } from './chartsLegendClasses';\r\nimport { DefaultChartsLegend } from './DefaultChartsLegend';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    direction\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', direction],\r\n    mark: ['mark'],\r\n    label: ['label'],\r\n    series: ['series']\r\n  };\r\n  return composeClasses(slots, getLegendUtilityClass, classes);\r\n};\r\nconst defaultProps = {\r\n  position: {\r\n    horizontal: 'middle',\r\n    vertical: 'top'\r\n  },\r\n  direction: 'row'\r\n};\r\nfunction ChartsLegend(inProps) {\r\n  const props = useThemeProps({\r\n    props: _extends({}, defaultProps, inProps),\r\n    name: 'MuiChartsLegend'\r\n  });\r\n  const {\r\n    position,\r\n    direction,\r\n    hidden,\r\n    slots,\r\n    slotProps\r\n  } = props;\r\n  const theme = useTheme();\r\n  const classes = useUtilityClasses(_extends({}, props, {\r\n    theme\r\n  }));\r\n  const drawingArea = React.useContext(DrawingContext);\r\n  const series = React.useContext(SeriesContext);\r\n  const seriesToDisplay = getSeriesToDisplay(series);\r\n  const ChartLegendRender = slots?.legend ?? DefaultChartsLegend;\r\n  const chartLegendRenderProps = useSlotProps({\r\n    elementType: ChartLegendRender,\r\n    externalSlotProps: slotProps?.legend,\r\n    additionalProps: {\r\n      position,\r\n      direction,\r\n      classes,\r\n      drawingArea,\r\n      series,\r\n      hidden,\r\n      seriesToDisplay\r\n    },\r\n    ownerState: {}\r\n  });\r\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * The direction of the legend layout.\r\n   * The default depends on the chart.\r\n   */\r\n  direction: PropTypes.oneOf(['column', 'row']),\r\n  /**\r\n   * Set to true to hide the legend.\r\n   * @default false\r\n   */\r\n  hidden: PropTypes.bool,\r\n  /**\r\n   * The position of the legend.\r\n   */\r\n  position: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\r\n  }),\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object\r\n} : void 0;\r\nexport { ChartsLegend };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}