{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\mytasks\\\\MyTasksGrid.component.tsx\",\n  _s = $RefreshSig$();\nimport \"./mytasks-grid.scss\";\nimport { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport { Edit, Delete } from \"@mui/icons-material\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"./context/theme.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerClassName: 'super-app-theme--header',\n  headerName: \"ID\",\n  width: 50\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 100\n}, {\n  field: \"content\",\n  headerName: \"Content\",\n  width: 300\n}, {\n  field: \"startDate\",\n  headerName: \"Start Date\",\n  width: 100,\n  renderCell: params => moment(params.row.startDate).format(\"DD-MM-YYYY\")\n}, {\n  field: \"endDate\",\n  headerName: \"End Date\",\n  width: 100,\n  renderCell: params => moment(params.row.endDate).format(\"DD-MM-YYYY\")\n}, {\n  field: \"status\",\n  headerName: \"Status\",\n  width: 100,\n  cellClassName: params => `status-${params.row.statusTheme.toLowerCase()}`\n}, {\n  field: \"tag\",\n  headerName: \"#tag\",\n  width: 100,\n  cellClassName: params => `tag-${params.row.tagTheme.toLowerCase()}`\n}, {\n  field: \"activityName\",\n  headerName: \"Activity\",\n  width: 100\n}, {\n  field: \"actions\",\n  headerName: \"Actions\",\n  width: 150,\n  sortable: false,\n  renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: () => params.row.handleUpdate(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      onClick: () => params.row.handleDelete(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this)\n}];\nconst MyTasksGrid = ({\n  data,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const handleDelete = id => {\n    onDelete(id);\n  };\n  const handleUpdate = id => {\n    onEdit(id);\n  };\n  const {\n    darkMode\n  } = useContext(ThemeContext);\n  const appStyles = darkMode ? \"app dark\" : \"app\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      height: 450,\n      \"& .MuiDataGrid-sortIcon\": {\n        opacity: 'inherit !important'\n      },\n      '& .super-app-theme--header': {\n        backgroundColor: darkMode ? 'black' : 'white'\n      }\n    },\n    className: \"mytasks-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data.map(row => ({\n        ...row,\n        handleUpdate,\n        handleDelete\n      })),\n      columns: columns,\n      getRowId: row => row.id,\n      rowHeight: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTasksGrid, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n_c = MyTasksGrid;\nexport default MyTasksGrid;\nvar _c;\n$RefreshReg$(_c, \"MyTasksGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","React","IconButton","Edit","Delete","useContext","ThemeContext","jsxDEV","_jsxDEV","columns","field","headerClassName","headerName","width","renderCell","params","row","startDate","format","endDate","cellClassName","statusTheme","toLowerCase","tagTheme","sortable","children","color","onClick","handleUpdate","id","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","MyTasksGrid","data","onEdit","onDelete","_s","darkMode","appStyles","sx","height","opacity","backgroundColor","className","rows","map","getRowId","rowHeight","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/mytasks/MyTasksGrid.component.tsx"],"sourcesContent":["import \"./mytasks-grid.scss\";\r\nimport { Box } from \"@mui/material\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { IMyTask } from \"../../types/global.typing\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { useContext, lazy, Suspense } from \"react\";\r\nimport { ThemeContext } from \"./context/theme.context\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"id\",  headerClassName: 'super-app-theme--header', headerName: \"ID\", width: 50 },\r\n  { field: \"name\", headerName: \"Name\", width: 100 },\r\n  { field: \"content\", headerName: \"Content\", width: 300 },\r\n  {\r\n    field: \"startDate\",\r\n    headerName: \"Start Date\",\r\n    width: 100,\r\n    renderCell: (params) => moment(params.row.startDate).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"endDate\",\r\n    headerName: \"End Date\",\r\n    width: 100,\r\n    renderCell: (params) => moment(params.row.endDate).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"status\",\r\n    headerName: \"Status\",\r\n    width: 100,\r\n    cellClassName: (params) => `status-${params.row.statusTheme.toLowerCase()}`,\r\n  },\r\n  {\r\n    field: \"tag\",\r\n    headerName: \"#tag\",\r\n    width: 100,\r\n    cellClassName: (params) => `tag-${params.row.tagTheme.toLowerCase()}`,\r\n  },\r\n  { field: \"activityName\", headerName: \"Activity\", width: 100 },\r\n  {\r\n    field: \"actions\",\r\n    headerName: \"Actions\",\r\n    width: 150,\r\n    sortable: false,\r\n    renderCell: (params) => (\r\n      <div>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => params.row.handleUpdate(params.row.id)}\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"secondary\"\r\n          onClick={() => params.row.handleDelete(params.row.id)}\r\n        >\r\n          <Delete />\r\n        </IconButton>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface IMyTasksGridProps {\r\n  data: IMyTask[];\r\n  onEdit: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nconst MyTasksGrid: React.FC<IMyTasksGridProps> = ({\r\n  data,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  const handleDelete = (id: string) => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const handleUpdate = (id: string) => {\r\n    onEdit(id);\r\n  };\r\n\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const appStyles = darkMode ? \"app dark\" : \"app\";\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", height: 450, \"& .MuiDataGrid-sortIcon\": {\r\n      opacity: 'inherit !important'\r\n  }, '& .super-app-theme--header': {\r\n    backgroundColor: darkMode ? 'black' : 'white',} }} className=\"mytasks-grid\">\r\n      <DataGrid\r\n        rows={data.map((row) => ({\r\n          ...row,\r\n          handleUpdate,\r\n          handleDelete,\r\n        }))}\r\n        columns={columns}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyTasksGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}