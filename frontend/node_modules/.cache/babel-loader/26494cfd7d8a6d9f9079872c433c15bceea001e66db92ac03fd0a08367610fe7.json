{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"rotate\", \"dominantBaseline\"],\n  _excluded2 = [\"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { NoSsr } from '@mui/base/NoSsr';\nimport { useTheme, styled } from '@mui/material/styles';\nimport { ChartsText } from '../ChartsText';\nimport { getWordsByLines } from '../internals/getWordsByLines';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ChartsLegendRoot = styled('g', {\n  name: 'MuiChartsLegend',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\r\n * Transforms number or partial padding object to a defaultized padding object.\r\n */\nconst getStandardizedPadding = padding => {\n  if (typeof padding === 'number') {\n    return {\n      left: padding,\n      right: padding,\n      top: padding,\n      bottom: padding\n    };\n  }\n  return _extends({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, padding);\n};\nfunction DefaultChartsLegend(props) {\n  const {\n    hidden,\n    position,\n    direction,\n    seriesToDisplay,\n    drawingArea,\n    classes,\n    itemMarkWidth = 20,\n    itemMarkHeight = 20,\n    markGap = 5,\n    itemGap = 10,\n    padding: paddingProps = 10,\n    labelStyle: inLabelStyle\n  } = props;\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n  const labelStyle = React.useMemo(() => _extends({}, theme.typography.subtitle1, {\n    color: 'inherit',\n    dominantBaseline: 'central',\n    textAnchor: 'start',\n    fill: (theme.vars || theme).palette.text.primary,\n    lineHeight: 1\n  }, inLabelStyle),\n  // To say to TS that the dominantBaseline and textAnchor are correct\n  [inLabelStyle, theme]);\n  const padding = React.useMemo(() => getStandardizedPadding(paddingProps), [paddingProps]);\n  const getItemSpace = React.useCallback((label, inStyle = {}) => {\n    const style = _objectWithoutPropertiesLoose(inStyle, _excluded);\n    const linesSize = getWordsByLines({\n      style,\n      needsComputation: true,\n      text: label\n    });\n    const innerSize = {\n      innerWidth: itemMarkWidth + markGap + Math.max(...linesSize.map(size => size.width)),\n      innerHeight: Math.max(itemMarkHeight, linesSize.length * linesSize[0].height)\n    };\n    return _extends({}, innerSize, {\n      outerWidth: innerSize.innerWidth + itemGap,\n      outerHeight: innerSize.innerHeight + itemGap\n    });\n  }, [itemGap, itemMarkHeight, itemMarkWidth, markGap]);\n  const totalWidth = drawingArea.left + drawingArea.width + drawingArea.right;\n  const totalHeight = drawingArea.top + drawingArea.height + drawingArea.bottom;\n  const availableWidth = totalWidth - padding.left - padding.right;\n  const availableHeight = totalHeight - padding.top - padding.bottom;\n  const [seriesWithPosition, legendWidth, legendHeight] = React.useMemo(() => {\n    // Start at 0, 0. Will be modified later by padding and position.\n    let x = 0;\n    let y = 0;\n\n    // total values used to align legend later.\n    let totalWidthUsed = 0;\n    let totalHeightUsed = 0;\n    let rowIndex = 0;\n    const rowMaxHeight = [0];\n    const seriesWithRawPosition = seriesToDisplay.map(_ref => {\n      let {\n          label\n        } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n      const itemSpace = getItemSpace(label, labelStyle);\n      const rep = _extends({}, other, {\n        label,\n        positionX: x,\n        positionY: y,\n        innerHeight: itemSpace.innerHeight,\n        innerWidth: itemSpace.innerWidth,\n        outerHeight: itemSpace.outerHeight,\n        outerWidth: itemSpace.outerWidth,\n        rowIndex\n      });\n      if (direction === 'row') {\n        if (x + itemSpace.innerWidth > availableWidth) {\n          // This legend item would create overflow along the x-axis, so we start a new row.\n          x = 0;\n          y += rowMaxHeight[rowIndex];\n          rowIndex += 1;\n          if (rowMaxHeight.length <= rowIndex) {\n            rowMaxHeight.push(0);\n          }\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\n        x += itemSpace.outerWidth;\n      }\n      if (direction === 'column') {\n        if (y + itemSpace.innerHeight > availableHeight) {\n          // This legend item would create overflow along the y-axis, so we start a new column.\n          x = totalWidthUsed + itemGap;\n          y = 0;\n          rowIndex = 0;\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        if (rowMaxHeight.length <= rowIndex) {\n          rowMaxHeight.push(0);\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowIndex += 1;\n        y += itemSpace.outerHeight;\n      }\n      return rep;\n    });\n    return [seriesWithRawPosition.map(item => _extends({}, item, {\n      positionY: item.positionY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\n      : item.outerHeight / 2) // Get the center of the item\n    })), totalWidthUsed, totalHeightUsed];\n  }, [seriesToDisplay, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap]);\n  const gapX = React.useMemo(() => {\n    switch (position.horizontal) {\n      case 'left':\n        return padding.left;\n      case 'right':\n        return totalWidth - padding.right - legendWidth;\n      default:\n        return (totalWidth - legendWidth) / 2;\n    }\n  }, [position.horizontal, padding.left, padding.right, totalWidth, legendWidth]);\n  const gapY = React.useMemo(() => {\n    switch (position.vertical) {\n      case 'top':\n        return padding.top;\n      case 'bottom':\n        return totalHeight - padding.bottom - legendHeight;\n      default:\n        return (totalHeight - legendHeight) / 2;\n    }\n  }, [position.vertical, padding.top, padding.bottom, totalHeight, legendHeight]);\n  if (hidden) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsx(ChartsLegendRoot, {\n      className: classes.root,\n      children: seriesWithPosition.map(({\n        id,\n        label,\n        color,\n        positionX,\n        positionY\n      }) => /*#__PURE__*/_jsxs(\"g\", {\n        className: classes.series,\n        transform: `translate(${gapX + (isRTL ? legendWidth - positionX : positionX)} ${gapY + positionY})`,\n        children: [/*#__PURE__*/_jsx(\"rect\", {\n          className: classes.mark,\n          x: isRTL ? -itemMarkWidth : 0,\n          y: -itemMarkHeight / 2,\n          width: itemMarkWidth,\n          height: itemMarkHeight,\n          fill: color\n        }), /*#__PURE__*/_jsx(ChartsText, {\n          style: labelStyle,\n          text: label,\n          x: (isRTL ? -1 : 1) * (itemMarkWidth + markGap),\n          y: 0\n        })]\n      }, id))\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object.isRequired,\n  /**\r\n   * The direction of the legend layout.\r\n   * The default depends on the chart.\r\n   */\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\n  drawingArea: PropTypes.shape({\n    bottom: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  /**\r\n   * Set to true to hide the legend.\r\n   * @default false\r\n   */\n  hidden: PropTypes.bool,\n  /**\r\n   * Space between two legend items (in px).\r\n   * @default 10\r\n   */\n  itemGap: PropTypes.number,\n  /**\r\n   * Height of the item mark (in px).\r\n   * @default 20\r\n   */\n  itemMarkHeight: PropTypes.number,\n  /**\r\n   * Width of the item mark (in px).\r\n   * @default 20\r\n   */\n  itemMarkWidth: PropTypes.number,\n  /**\r\n   * Style applied to legend labels.\r\n   * @default theme.typography.subtitle1\r\n   */\n  labelStyle: PropTypes.object,\n  /**\r\n   * Space between the mark and the label (in px).\r\n   * @default 5\r\n   */\n  markGap: PropTypes.number,\n  /**\r\n   * Legend padding (in px).\r\n   * Can either be a single number, or an object with top, left, bottom, right properties.\r\n   * @default 10\r\n   */\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })]),\n  /**\r\n   * The position of the legend.\r\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }).isRequired,\n  series: PropTypes.object.isRequired,\n  seriesToDisplay: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n} : void 0;\nexport { DefaultChartsLegend };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","NoSsr","useTheme","styled","ChartsText","getWordsByLines","jsx","_jsx","jsxs","_jsxs","ChartsLegendRoot","name","slot","overridesResolver","props","styles","root","getStandardizedPadding","padding","left","right","top","bottom","DefaultChartsLegend","hidden","position","direction","seriesToDisplay","drawingArea","classes","itemMarkWidth","itemMarkHeight","markGap","itemGap","paddingProps","labelStyle","inLabelStyle","theme","isRTL","useMemo","typography","subtitle1","color","dominantBaseline","textAnchor","fill","vars","palette","text","primary","lineHeight","getItemSpace","useCallback","label","inStyle","style","linesSize","needsComputation","innerSize","innerWidth","Math","max","map","size","width","innerHeight","length","height","outerWidth","outerHeight","totalWidth","totalHeight","availableWidth","availableHeight","seriesWithPosition","legendWidth","legendHeight","x","y","totalWidthUsed","totalHeightUsed","rowIndex","rowMaxHeight","seriesWithRawPosition","_ref","other","itemSpace","rep","positionX","positionY","push","item","gapX","horizontal","gapY","vertical","children","className","id","series","transform","mark","process","env","NODE_ENV","propTypes","object","isRequired","oneOf","shape","number","bool","oneOfType","arrayOf","string"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/node_modules/@mui/x-charts/esm/ChartsLegend/DefaultChartsLegend.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"rotate\", \"dominantBaseline\"],\r\n  _excluded2 = [\"label\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NoSsr } from '@mui/base/NoSsr';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { ChartsText } from '../ChartsText';\r\nimport { getWordsByLines } from '../internals/getWordsByLines';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport const ChartsLegendRoot = styled('g', {\r\n  name: 'MuiChartsLegend',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({});\r\n/**\r\n * Transforms number or partial padding object to a defaultized padding object.\r\n */\r\nconst getStandardizedPadding = padding => {\r\n  if (typeof padding === 'number') {\r\n    return {\r\n      left: padding,\r\n      right: padding,\r\n      top: padding,\r\n      bottom: padding\r\n    };\r\n  }\r\n  return _extends({\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0\r\n  }, padding);\r\n};\r\nfunction DefaultChartsLegend(props) {\r\n  const {\r\n    hidden,\r\n    position,\r\n    direction,\r\n    seriesToDisplay,\r\n    drawingArea,\r\n    classes,\r\n    itemMarkWidth = 20,\r\n    itemMarkHeight = 20,\r\n    markGap = 5,\r\n    itemGap = 10,\r\n    padding: paddingProps = 10,\r\n    labelStyle: inLabelStyle\r\n  } = props;\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n  const labelStyle = React.useMemo(() => _extends({}, theme.typography.subtitle1, {\r\n    color: 'inherit',\r\n    dominantBaseline: 'central',\r\n    textAnchor: 'start',\r\n    fill: (theme.vars || theme).palette.text.primary,\r\n    lineHeight: 1\r\n  }, inLabelStyle),\r\n  // To say to TS that the dominantBaseline and textAnchor are correct\r\n  [inLabelStyle, theme]);\r\n  const padding = React.useMemo(() => getStandardizedPadding(paddingProps), [paddingProps]);\r\n  const getItemSpace = React.useCallback((label, inStyle = {}) => {\r\n    const style = _objectWithoutPropertiesLoose(inStyle, _excluded);\r\n    const linesSize = getWordsByLines({\r\n      style,\r\n      needsComputation: true,\r\n      text: label\r\n    });\r\n    const innerSize = {\r\n      innerWidth: itemMarkWidth + markGap + Math.max(...linesSize.map(size => size.width)),\r\n      innerHeight: Math.max(itemMarkHeight, linesSize.length * linesSize[0].height)\r\n    };\r\n    return _extends({}, innerSize, {\r\n      outerWidth: innerSize.innerWidth + itemGap,\r\n      outerHeight: innerSize.innerHeight + itemGap\r\n    });\r\n  }, [itemGap, itemMarkHeight, itemMarkWidth, markGap]);\r\n  const totalWidth = drawingArea.left + drawingArea.width + drawingArea.right;\r\n  const totalHeight = drawingArea.top + drawingArea.height + drawingArea.bottom;\r\n  const availableWidth = totalWidth - padding.left - padding.right;\r\n  const availableHeight = totalHeight - padding.top - padding.bottom;\r\n  const [seriesWithPosition, legendWidth, legendHeight] = React.useMemo(() => {\r\n    // Start at 0, 0. Will be modified later by padding and position.\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    // total values used to align legend later.\r\n    let totalWidthUsed = 0;\r\n    let totalHeightUsed = 0;\r\n    let rowIndex = 0;\r\n    const rowMaxHeight = [0];\r\n    const seriesWithRawPosition = seriesToDisplay.map(_ref => {\r\n      let {\r\n          label\r\n        } = _ref,\r\n        other = _objectWithoutPropertiesLoose(_ref, _excluded2);\r\n      const itemSpace = getItemSpace(label, labelStyle);\r\n      const rep = _extends({}, other, {\r\n        label,\r\n        positionX: x,\r\n        positionY: y,\r\n        innerHeight: itemSpace.innerHeight,\r\n        innerWidth: itemSpace.innerWidth,\r\n        outerHeight: itemSpace.outerHeight,\r\n        outerWidth: itemSpace.outerWidth,\r\n        rowIndex\r\n      });\r\n      if (direction === 'row') {\r\n        if (x + itemSpace.innerWidth > availableWidth) {\r\n          // This legend item would create overflow along the x-axis, so we start a new row.\r\n          x = 0;\r\n          y += rowMaxHeight[rowIndex];\r\n          rowIndex += 1;\r\n          if (rowMaxHeight.length <= rowIndex) {\r\n            rowMaxHeight.push(0);\r\n          }\r\n          rep.positionX = x;\r\n          rep.positionY = y;\r\n          rep.rowIndex = rowIndex;\r\n        }\r\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\r\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\r\n        rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\r\n        x += itemSpace.outerWidth;\r\n      }\r\n      if (direction === 'column') {\r\n        if (y + itemSpace.innerHeight > availableHeight) {\r\n          // This legend item would create overflow along the y-axis, so we start a new column.\r\n          x = totalWidthUsed + itemGap;\r\n          y = 0;\r\n          rowIndex = 0;\r\n          rep.positionX = x;\r\n          rep.positionY = y;\r\n          rep.rowIndex = rowIndex;\r\n        }\r\n        if (rowMaxHeight.length <= rowIndex) {\r\n          rowMaxHeight.push(0);\r\n        }\r\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\r\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\r\n        rowIndex += 1;\r\n        y += itemSpace.outerHeight;\r\n      }\r\n      return rep;\r\n    });\r\n    return [seriesWithRawPosition.map(item => _extends({}, item, {\r\n      positionY: item.positionY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\r\n      : item.outerHeight / 2) // Get the center of the item\r\n    })), totalWidthUsed, totalHeightUsed];\r\n  }, [seriesToDisplay, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap]);\r\n  const gapX = React.useMemo(() => {\r\n    switch (position.horizontal) {\r\n      case 'left':\r\n        return padding.left;\r\n      case 'right':\r\n        return totalWidth - padding.right - legendWidth;\r\n      default:\r\n        return (totalWidth - legendWidth) / 2;\r\n    }\r\n  }, [position.horizontal, padding.left, padding.right, totalWidth, legendWidth]);\r\n  const gapY = React.useMemo(() => {\r\n    switch (position.vertical) {\r\n      case 'top':\r\n        return padding.top;\r\n      case 'bottom':\r\n        return totalHeight - padding.bottom - legendHeight;\r\n      default:\r\n        return (totalHeight - legendHeight) / 2;\r\n    }\r\n  }, [position.vertical, padding.top, padding.bottom, totalHeight, legendHeight]);\r\n  if (hidden) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(NoSsr, {\r\n    children: /*#__PURE__*/_jsx(ChartsLegendRoot, {\r\n      className: classes.root,\r\n      children: seriesWithPosition.map(({\r\n        id,\r\n        label,\r\n        color,\r\n        positionX,\r\n        positionY\r\n      }) => /*#__PURE__*/_jsxs(\"g\", {\r\n        className: classes.series,\r\n        transform: `translate(${gapX + (isRTL ? legendWidth - positionX : positionX)} ${gapY + positionY})`,\r\n        children: [/*#__PURE__*/_jsx(\"rect\", {\r\n          className: classes.mark,\r\n          x: isRTL ? -itemMarkWidth : 0,\r\n          y: -itemMarkHeight / 2,\r\n          width: itemMarkWidth,\r\n          height: itemMarkHeight,\r\n          fill: color\r\n        }), /*#__PURE__*/_jsx(ChartsText, {\r\n          style: labelStyle,\r\n          text: label,\r\n          x: (isRTL ? -1 : 1) * (itemMarkWidth + markGap),\r\n          y: 0\r\n        })]\r\n      }, id))\r\n    })\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? DefaultChartsLegend.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * The direction of the legend layout.\r\n   * The default depends on the chart.\r\n   */\r\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\r\n  drawingArea: PropTypes.shape({\r\n    bottom: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    left: PropTypes.number.isRequired,\r\n    right: PropTypes.number.isRequired,\r\n    top: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  /**\r\n   * Set to true to hide the legend.\r\n   * @default false\r\n   */\r\n  hidden: PropTypes.bool,\r\n  /**\r\n   * Space between two legend items (in px).\r\n   * @default 10\r\n   */\r\n  itemGap: PropTypes.number,\r\n  /**\r\n   * Height of the item mark (in px).\r\n   * @default 20\r\n   */\r\n  itemMarkHeight: PropTypes.number,\r\n  /**\r\n   * Width of the item mark (in px).\r\n   * @default 20\r\n   */\r\n  itemMarkWidth: PropTypes.number,\r\n  /**\r\n   * Style applied to legend labels.\r\n   * @default theme.typography.subtitle1\r\n   */\r\n  labelStyle: PropTypes.object,\r\n  /**\r\n   * Space between the mark and the label (in px).\r\n   * @default 5\r\n   */\r\n  markGap: PropTypes.number,\r\n  /**\r\n   * Legend padding (in px).\r\n   * Can either be a single number, or an object with top, left, bottom, right properties.\r\n   * @default 10\r\n   */\r\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    bottom: PropTypes.number,\r\n    left: PropTypes.number,\r\n    right: PropTypes.number,\r\n    top: PropTypes.number\r\n  })]),\r\n  /**\r\n   * The position of the legend.\r\n   */\r\n  position: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\r\n  }).isRequired,\r\n  series: PropTypes.object.isRequired,\r\n  seriesToDisplay: PropTypes.arrayOf(PropTypes.shape({\r\n    color: PropTypes.string.isRequired,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n    label: PropTypes.string.isRequired\r\n  })).isRequired\r\n} : void 0;\r\nexport { DefaultChartsLegend };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}