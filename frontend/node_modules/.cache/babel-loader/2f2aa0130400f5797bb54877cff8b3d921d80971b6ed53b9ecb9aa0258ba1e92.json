{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\homepage\\\\DoneThisWeek.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BarChart } from \"@mui/x-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoneThisWeek = () => {\n  _s();\n  const [mytasks, setMyTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMyTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5004/api/MyTask/Get\");\n        const data = await response.json();\n        setMyTasks(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n    fetchMyTasks();\n  }, []);\n  const getMyTasksThisWeek = mytasks => {\n    const currentDate = new Date();\n    const currentWeek = getWeekNumber(currentDate);\n    const currentYear = currentDate.getFullYear();\n    return mytasks.filter(mytask => {\n      const updatedAtDate = new Date(mytask.updatedAt);\n      const taskWeek = getWeekNumber(updatedAtDate);\n      const taskYear = updatedAtDate.getFullYear();\n      return mytask.status === \"Done\" && taskWeek === currentWeek && taskYear === currentYear;\n    });\n  };\n\n  // Function to get the week number of the year\n  const getWeekNumber = d => {\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    const weekNo = Math.ceil(((d.getTime() - yearStart.getTime()) / 86400000 + 1) / 7);\n    return weekNo;\n  };\n  const mytasksThisWeek = getMyTasksThisWeek(mytasks);\n  const groupMyTasksByStatus = mytasks => {\n    let doneCount = 0;\n    mytasks.forEach(mytask => {\n      if (mytask.status === \"Done\") {\n        doneCount += 1;\n      }\n    });\n    return {\n      done: doneCount\n    };\n  };\n  const statusCounts = groupMyTasksByStatus(mytasksThisWeek);\n  const uData = [statusCounts.done];\n  const xLabels = [\"Done\"];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Tasks done this week.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      series: [{\n        data: uData,\n        label: \"Count\",\n        type: \"bar\",\n        color: \"#ff8c00\"\n      }],\n      xAxis: [{\n        scaleType: \"band\",\n        data: xLabels\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(DoneThisWeek, \"hP/c/r9I5nNqJIkznPQOPxfEGYE=\");\n_c = DoneThisWeek;\nexport default DoneThisWeek;\nvar _c;\n$RefreshReg$(_c, \"DoneThisWeek\");","map":{"version":3,"names":["useState","useEffect","BarChart","jsxDEV","_jsxDEV","DoneThisWeek","_s","mytasks","setMyTasks","loading","setLoading","error","setError","fetchMyTasks","response","fetch","data","json","err","getMyTasksThisWeek","currentDate","Date","currentWeek","getWeekNumber","currentYear","getFullYear","filter","mytask","updatedAtDate","updatedAt","taskWeek","taskYear","status","d","UTC","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","getTime","mytasksThisWeek","groupMyTasksByStatus","doneCount","forEach","done","statusCounts","uData","xLabels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","series","label","type","color","xAxis","scaleType","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/homepage/DoneThisWeek.component.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BarChart } from \"@mui/x-charts\";\r\nimport { IMyTask } from \"../../types/global.typing\";\r\n\r\nconst DoneThisWeek = () => {\r\n  const [mytasks, setMyTasks] = useState<IMyTask[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMyTasks = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5004/api/MyTask/Get\");\r\n        const data = await response.json();\r\n        setMyTasks(data);\r\n        setLoading(false);\r\n      } catch (err: any) {\r\n        setError(err as Error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMyTasks();\r\n  }, []);\r\n\r\n  const getMyTasksThisWeek = (mytasks: IMyTask[]) => {\r\n    const currentDate = new Date();\r\n    const currentWeek = getWeekNumber(currentDate);\r\n    const currentYear = currentDate.getFullYear();\r\n\r\n    return mytasks.filter((mytask) => {\r\n      const updatedAtDate = new Date(mytask.updatedAt);\r\n      const taskWeek = getWeekNumber(updatedAtDate)\r\n      const taskYear = updatedAtDate.getFullYear();\r\n      return (\r\n        mytask.status === \"Done\" &&\r\n        taskWeek === currentWeek &&\r\n        taskYear === currentYear\r\n      );\r\n    });\r\n  };\r\n\r\n  // Function to get the week number of the year\r\n  const getWeekNumber = (d: Date): number => {\r\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\r\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\r\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    const weekNo = Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\r\n    return weekNo;\r\n  };\r\n\r\n  const mytasksThisWeek = getMyTasksThisWeek(mytasks);\r\n  \r\n  const groupMyTasksByStatus = (mytasks: IMyTask[]) => {\r\n    let doneCount = 0;\r\n\r\n    mytasks.forEach((mytask) => {\r\n      if (mytask.status === \"Done\") {\r\n        doneCount += 1;\r\n      }\r\n    });\r\n\r\n    return { done: doneCount };\r\n  };\r\n\r\n  const statusCounts = groupMyTasksByStatus(mytasksThisWeek);\r\n  \r\n  const uData = [statusCounts.done];\r\n\r\n  const xLabels = [\"Done\"];\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error fetching data</p>;\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <span>Tasks done this week.</span>\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        series={[\r\n          { data: uData, label: \"Count\", type: \"bar\", color: \"#ff8c00\" },\r\n        ]}\r\n        xAxis={[{ scaleType: \"band\", data: xLabels }]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneThisWeek;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EACrD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAe,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,UAAU,CAACQ,IAAI,CAAC;QAChBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOQ,GAAQ,EAAE;QACjBN,QAAQ,CAACM,GAAY,CAAC;QACtBR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAIZ,OAAkB,IAAK;IACjD,MAAMa,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMC,WAAW,GAAGC,aAAa,CAACH,WAAW,CAAC;IAC9C,MAAMI,WAAW,GAAGJ,WAAW,CAACK,WAAW,CAAC,CAAC;IAE7C,OAAOlB,OAAO,CAACmB,MAAM,CAAEC,MAAM,IAAK;MAChC,MAAMC,aAAa,GAAG,IAAIP,IAAI,CAACM,MAAM,CAACE,SAAS,CAAC;MAChD,MAAMC,QAAQ,GAAGP,aAAa,CAACK,aAAa,CAAC;MAC7C,MAAMG,QAAQ,GAAGH,aAAa,CAACH,WAAW,CAAC,CAAC;MAC5C,OACEE,MAAM,CAACK,MAAM,KAAK,MAAM,IACxBF,QAAQ,KAAKR,WAAW,IACxBS,QAAQ,KAAKP,WAAW;IAE5B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMD,aAAa,GAAIU,CAAO,IAAa;IACzCA,CAAC,GAAG,IAAIZ,IAAI,CAACA,IAAI,CAACa,GAAG,CAACD,CAAC,CAACR,WAAW,CAAC,CAAC,EAAEQ,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAEF,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClEH,CAAC,CAACI,UAAU,CAACJ,CAAC,CAACK,UAAU,CAAC,CAAC,GAAG,CAAC,IAAIL,CAAC,CAACM,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,MAAMC,SAAS,GAAG,IAAInB,IAAI,CAACA,IAAI,CAACa,GAAG,CAACD,CAAC,CAACQ,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9D,MAAMC,MAAM,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAE,CAACX,CAAC,CAACY,OAAO,CAAC,CAAC,GAAGL,SAAS,CAACK,OAAO,CAAC,CAAC,IAAI,QAAQ,GAAI,CAAC,IAAI,CAAC,CAAC;IACpF,OAAOH,MAAM;EACf,CAAC;EAED,MAAMI,eAAe,GAAG3B,kBAAkB,CAACZ,OAAO,CAAC;EAEnD,MAAMwC,oBAAoB,GAAIxC,OAAkB,IAAK;IACnD,IAAIyC,SAAS,GAAG,CAAC;IAEjBzC,OAAO,CAAC0C,OAAO,CAAEtB,MAAM,IAAK;MAC1B,IAAIA,MAAM,CAACK,MAAM,KAAK,MAAM,EAAE;QAC5BgB,SAAS,IAAI,CAAC;MAChB;IACF,CAAC,CAAC;IAEF,OAAO;MAAEE,IAAI,EAAEF;IAAU,CAAC;EAC5B,CAAC;EAED,MAAMG,YAAY,GAAGJ,oBAAoB,CAACD,eAAe,CAAC;EAE1D,MAAMM,KAAK,GAAG,CAACD,YAAY,CAACD,IAAI,CAAC;EAEjC,MAAMG,OAAO,GAAG,CAAC,MAAM,CAAC;EAExB,IAAI5C,OAAO,EAAE,oBAAOL,OAAA;IAAAkD,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAI/C,KAAK,EAAE,oBAAOP,OAAA;IAAAkD,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5C,oBACEtD,OAAA;IAAKuD,SAAS,EAAC,SAAS;IAAAL,QAAA,gBACtBlD,OAAA;MAAAkD,QAAA,EAAM;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCtD,OAAA,CAACF,QAAQ;MACP0D,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,MAAM,EAAE,CACN;QAAE9C,IAAI,EAAEoC,KAAK;QAAEW,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAU,CAAC,CAC9D;MACFC,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEnD,IAAI,EAAEqC;MAAQ,CAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpD,EAAA,CAlFID,YAAY;AAAA+D,EAAA,GAAZ/D,YAAY;AAoFlB,eAAeA,YAAY;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}