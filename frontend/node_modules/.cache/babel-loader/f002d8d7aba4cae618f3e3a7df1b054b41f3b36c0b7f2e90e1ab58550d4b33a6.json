{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\activities\\\\ActivitiesGrid.component.tsx\";\nimport \"./activities-grid.scss\";\nimport { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport { Edit, Delete } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 50\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 100\n}, {\n  field: \"description\",\n  headerName: \"Description\",\n  width: 300\n}, {\n  field: \"activityType\",\n  headerName: \"Type\",\n  width: 100\n}, {\n  field: \"status\",\n  headerName: \"Status\",\n  width: 100,\n  cellClassName: params => `status-${params.row.statusTheme.toLowerCase()}`\n}, {\n  field: \"statusTheme\",\n  headerName: \"Theme\",\n  width: 100\n}, {\n  field: \"tag\",\n  headerName: \"Tag\",\n  width: 100,\n  cellClassName: params => `tag-${params.row.tagTheme.toLowerCase()}`\n}, {\n  field: \"tagTheme\",\n  headerName: \"Theme\",\n  width: 100\n}, {\n  field: \"createdAt\",\n  headerName: \"Creation Time\",\n  width: 150,\n  renderCell: params => moment(params.row.createdAt).format(\"DD-MM-YYYY\")\n}, {\n  field: \"updatedAt\",\n  headerName: \"Time of Updating\",\n  width: 150,\n  renderCell: params => moment(params.row.updatedAt).format(\"DD-MM-YYYY\")\n}, {\n  field: \"actions\",\n  headerName: \"Actions\",\n  width: 150,\n  sortable: false,\n  renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: () => params.row.handleUpdate(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      onClick: () => params.row.handleDelete(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)\n}];\nconst ActivitiesGrid = ({\n  data,\n  onEdit,\n  onDelete\n}) => {\n  const handleDelete = id => {\n    onDelete(id);\n  };\n  const handleUpdate = id => {\n    onEdit(id);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      height: 450\n    },\n    className: \"activities-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data.map(row => ({\n        ...row,\n        handleUpdate,\n        handleDelete\n      })),\n      columns: columns,\n      getRowId: row => row.id,\n      rowHeight: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c = ActivitiesGrid;\nexport default ActivitiesGrid;\nvar _c;\n$RefreshReg$(_c, \"ActivitiesGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","React","IconButton","Edit","Delete","jsxDEV","_jsxDEV","columns","field","headerName","width","cellClassName","params","row","statusTheme","toLowerCase","tagTheme","renderCell","createdAt","format","updatedAt","sortable","children","color","onClick","handleUpdate","id","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","ActivitiesGrid","data","onEdit","onDelete","sx","height","className","rows","map","getRowId","rowHeight","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/activities/ActivitiesGrid.component.tsx"],"sourcesContent":["import \"./activities-grid.scss\"\r\nimport { Box } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { GridColDef } from \"@mui/x-data-grid/models\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { IActivity } from \"../../types/global.typing\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"id\", headerName: \"ID\", width: 50 },\r\n  { field: \"name\", headerName: \"Name\", width: 100 },\r\n  { field: \"description\", headerName: \"Description\", width: 300 },\r\n  { field: \"activityType\", headerName: \"Type\", width: 100 },\r\n  {\r\n    field: \"status\",\r\n    headerName: \"Status\",\r\n    width: 100,\r\n    cellClassName: (params) => `status-${params.row.statusTheme.toLowerCase()}`,\r\n  },\r\n  { field: \"statusTheme\", headerName: \"Theme\", width: 100 },\r\n  {\r\n    field: \"tag\",\r\n    headerName: \"Tag\",\r\n    width: 100,\r\n    cellClassName: (params) => `tag-${params.row.tagTheme.toLowerCase()}`,\r\n  },\r\n  { field: \"tagTheme\", headerName: \"Theme\", width: 100 },\r\n  {\r\n    field: \"createdAt\",\r\n    headerName: \"Creation Time\",\r\n    width: 150,\r\n    renderCell: (params) => moment(params.row.createdAt).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"updatedAt\",\r\n    headerName: \"Time of Updating\",\r\n    width: 150,\r\n    renderCell: (params) => moment(params.row.updatedAt).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"actions\",\r\n    headerName: \"Actions\",\r\n    width: 150,\r\n    sortable: false,\r\n    renderCell: (params) => (\r\n      <div>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => params.row.handleUpdate(params.row.id)}\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"secondary\"\r\n          onClick={() => params.row.handleDelete(params.row.id)}\r\n        >\r\n          <Delete />\r\n        </IconButton>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface IActivitiesGridProps {\r\n  data: IActivity[];\r\n  onEdit: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nconst ActivitiesGrid: React.FC<IActivitiesGridProps> = ({\r\n  data,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  \r\n  const handleDelete = (id: string) => {\r\n    onDelete(id);\r\n  };\r\n  const handleUpdate = (id: string) => {\r\n    onEdit(id);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", height: 450 }} className=\"activities-grid\">\r\n      <DataGrid\r\n        rows={data.map((row) => ({\r\n          ...row,\r\n          handleUpdate,\r\n          handleDelete,\r\n        }))}\r\n        columns={columns}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActivitiesGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}