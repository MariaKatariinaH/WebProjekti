{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\mytasks\\\\MyTasksGrid.component.tsx\";\nimport \"./mytasks-grid.scss\";\nimport { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport { Edit, Delete } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"ID\",\n  width: 50\n}, {\n  field: \"name\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Name\",\n  width: 100\n}, {\n  field: \"content\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Content\",\n  width: 300\n}, {\n  field: \"startDate\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Start Date\",\n  width: 100,\n  renderCell: params => moment(params.row.startDate).format(\"DD-MM-YYYY\")\n}, {\n  field: \"endDate\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"End Date\",\n  width: 100,\n  renderCell: params => moment(params.row.endDate).format(\"DD-MM-YYYY\")\n}, {\n  field: \"status\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Status\",\n  width: 100,\n  cellClassName: params => `status-${params.row.statusTheme.toLowerCase()}`\n}, {\n  field: \"tag\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"#tag\",\n  width: 100,\n  cellClassName: params => `tag-${params.row.tagTheme.toLowerCase()}`\n}, {\n  field: \"activityName\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Activity\",\n  width: 100\n}, {\n  field: \"actions\",\n  headerClassName: \"super-app-theme--header\",\n  headerName: \"Actions\",\n  width: 150,\n  sortable: false,\n  renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: () => params.row.handleUpdate(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      onClick: () => params.row.handleDelete(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this)\n}];\nconst MyTasksGrid = ({\n  data,\n  onEdit,\n  onDelete\n}) => {\n  const handleDelete = id => {\n    onDelete(id);\n  };\n  const handleUpdate = id => {\n    onEdit(id);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      height: 450,\n      \"& .MuiDataGrid-sortIcon\": {\n        opacity: \"inherit !important\"\n      }\n    },\n    className: \"mytasks-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data.map(row => ({\n        ...row,\n        handleUpdate,\n        handleDelete\n      })),\n      columns: columns,\n      getRowId: row => row.id,\n      rowHeight: 50,\n      pageSizeOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_c = MyTasksGrid;\nexport default MyTasksGrid;\nvar _c;\n$RefreshReg$(_c, \"MyTasksGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","React","IconButton","Edit","Delete","jsxDEV","_jsxDEV","columns","field","headerClassName","headerName","width","renderCell","params","row","startDate","format","endDate","cellClassName","statusTheme","toLowerCase","tagTheme","sortable","children","color","onClick","handleUpdate","id","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","MyTasksGrid","data","onEdit","onDelete","sx","height","opacity","className","rows","map","getRowId","rowHeight","pageSizeOptions","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/mytasks/MyTasksGrid.component.tsx"],"sourcesContent":["import \"./mytasks-grid.scss\";\r\nimport { Box } from \"@mui/material\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { IMyTask } from \"../../types/global.typing\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"id\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"ID\",\r\n    width: 50,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Name\",\r\n    width: 100,\r\n  },\r\n  {\r\n    field: \"content\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Content\",\r\n    width: 300,\r\n  },\r\n  {\r\n    field: \"startDate\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Start Date\",\r\n    width: 100,\r\n    renderCell: (params) => moment(params.row.startDate).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"endDate\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"End Date\",\r\n    width: 100,\r\n    renderCell: (params) => moment(params.row.endDate).format(\"DD-MM-YYYY\"),\r\n  },\r\n  {\r\n    field: \"status\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Status\",\r\n    width: 100,\r\n    cellClassName: (params) => `status-${params.row.statusTheme.toLowerCase()}`,\r\n  },\r\n  {\r\n    field: \"tag\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"#tag\",\r\n    width: 100,\r\n    cellClassName: (params) => `tag-${params.row.tagTheme.toLowerCase()}`,\r\n  },\r\n  {\r\n    field: \"activityName\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Activity\",\r\n    width: 100,\r\n  },\r\n  {\r\n    field: \"actions\",\r\n    headerClassName: \"super-app-theme--header\",\r\n    headerName: \"Actions\",\r\n    width: 150,\r\n    sortable: false,\r\n    renderCell: (params) => (\r\n      <div>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => params.row.handleUpdate(params.row.id)}\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"secondary\"\r\n          onClick={() => params.row.handleDelete(params.row.id)}\r\n        >\r\n          <Delete />\r\n        </IconButton>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface IMyTasksGridProps {\r\n  data: IMyTask[];\r\n  onEdit: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nconst MyTasksGrid: React.FC<IMyTasksGridProps> = ({\r\n  data,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  const handleDelete = (id: string) => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const handleUpdate = (id: string) => {\r\n    onEdit(id);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 450,\r\n        \"& .MuiDataGrid-sortIcon\": {\r\n          opacity: \"inherit !important\",\r\n        },\r\n      }}\r\n      className=\"mytasks-grid\"\r\n    >\r\n      <DataGrid \r\n        rows={data.map((row) => ({\r\n          ...row,\r\n          handleUpdate,\r\n          handleDelete,\r\n        }))}\r\n        columns={columns}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n        pageSizeOptions={[5,10,25]}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyTasksGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}