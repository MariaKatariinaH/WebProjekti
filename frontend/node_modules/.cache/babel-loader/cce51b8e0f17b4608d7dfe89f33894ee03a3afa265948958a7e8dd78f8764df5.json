{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ResponsiveChartContainer, BarPlot, LinePlot, ChartsXAxis } from '@mui/x-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsBarChart = () => {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchActivities = async () => {\n      try {\n        const response = await fetch('http://localhost:5004/api/Activity/Get');\n        const data = await response.json();\n        setActivities(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n    fetchActivities();\n  }, []);\n  const groupActivitiesByStatus = activities => {\n    const statusCounts = {\n      new: 0,\n      inprogress: 0,\n      done: 0,\n      notdoing: 0\n    };\n    activities.forEach(activity => {\n      if (activity.status) {\n        statusCounts[activity.status.toLowerCase()] += 1;\n      }\n    });\n    return statusCounts;\n  };\n  const statusCounts = groupActivitiesByStatus(activities);\n  const uData = [statusCounts.new, statusCounts.inprogress, statusCounts.done, statusCounts.notdoing];\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your situation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Be proud of your progress.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveChartContainer, {\n        width: 500,\n        height: 300,\n        series: [{\n          type: 'bar',\n          data: uData\n        }, {\n          type: 'line',\n          data: [3, 2, 1, 2]\n        } // Placeholder line data\n        ],\n        xAxis: [{\n          scaleType: 'band',\n          data: xLabels,\n          label: 'Status'\n        }],\n        children: [/*#__PURE__*/_jsxDEV(BarPlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinePlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartsXAxis, {\n          label: \"Status\",\n          position: \"bottom\",\n          axisId: \"status-axis-id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsBarChart, \"QUo/oLkcOdllJU1Xvu036Y1MawY=\");\n_c = StatisticsBarChart;\nexport default StatisticsBarChart;\nvar _c;\n$RefreshReg$(_c, \"StatisticsBarChart\");","map":{"version":3,"names":["React","useState","useEffect","ResponsiveChartContainer","BarPlot","LinePlot","ChartsXAxis","jsxDEV","_jsxDEV","StatisticsBarChart","_s","activities","setActivities","loading","setLoading","error","setError","fetchActivities","response","fetch","data","json","err","groupActivitiesByStatus","statusCounts","new","inprogress","done","notdoing","forEach","activity","status","toLowerCase","uData","xLabels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","series","type","xAxis","scaleType","label","position","axisId","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ResponsiveChartContainer, BarPlot, LinePlot, ChartsXAxis } from '@mui/x-charts';\r\nimport { IActivity } from '../../types/global.typing';\r\n\r\nconst StatisticsBarChart: React.FC = () => {\r\n  const [activities, setActivities] = useState<IActivity[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchActivities = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5004/api/Activity/Get');\r\n        const data = await response.json();\r\n        setActivities(data);\r\n        setLoading(false);\r\n      } catch (err: any) {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchActivities();\r\n  }, []);\r\n\r\n  const groupActivitiesByStatus = (activities: IActivity[]) => {\r\n    const statusCounts: { [key: string]: number } = {\r\n      new: 0,\r\n      inprogress: 0,\r\n      done: 0,\r\n      notdoing: 0,\r\n    };\r\n\r\n    activities.forEach((activity) => {\r\n      if (activity.status) {\r\n        statusCounts[activity.status.toLowerCase()] += 1;\r\n      }\r\n    });\r\n\r\n    return statusCounts;\r\n  };\r\n\r\n  const statusCounts = groupActivitiesByStatus(activities);\r\n\r\n  const uData = [\r\n    statusCounts.new,\r\n    statusCounts.inprogress,\r\n    statusCounts.done,\r\n    statusCounts.notdoing,\r\n  ];\r\n\r\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error fetching data</p>;\r\n\r\n  return (\r\n    <div className='content statistics'> \r\n      <h3>Your situation</h3>\r\n      <br />\r\n      <br />\r\n      <span>\r\n          Be proud of your progress.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <ResponsiveChartContainer\r\n          width={500}\r\n          height={300}\r\n          series={[\r\n            { type: 'bar', data: uData },\r\n            { type: 'line', data: [3, 2, 1, 2] } // Placeholder line data\r\n          ]}\r\n          xAxis={[\r\n            { scaleType: 'band', data: xLabels, label: 'Status' }\r\n          ]}\r\n        >\r\n          <BarPlot />\r\n          <LinePlot />\r\n          <ChartsXAxis label=\"Status\" position=\"bottom\" axisId=\"status-axis-id\" />\r\n        </ResponsiveChartContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsBarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}