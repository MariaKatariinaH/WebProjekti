{"ast":null,"code":"/*import * as React from 'react';\r\nimport { ChartContainer, BarPlot } from '@mui/x-charts';\r\nimport { IActivity } from '../../types/global.typing';\r\n\r\n\r\n\r\ninterface IActivitiesPageProps {\r\n    data: IActivity[];\r\n}\r\n\r\nconst groupActivitiesByStatus = (activities: IActivity[]) => {\r\n  const statusCounts: { [key: string]: number } = {\r\n    new: 0,\r\n    inprogress: 0,\r\n    done: 0,\r\n    notdoing: 0,\r\n  };\r\n\r\n  activities.forEach((activity) => {\r\n    if (activity.status) {\r\n      statusCounts[activity.status.toLowerCase()] += 1;\r\n    }\r\n  });\r\n\r\n  return statusCounts;\r\n};\r\n\r\nconst Statistics: React.FC<IActivitiesPageProps> = ({ data }) => {\r\n  const statusCounts = groupActivitiesByStatus(data);\r\n\r\n  const uData = [\r\n    statusCounts.new,\r\n    statusCounts.inprogress,\r\n    statusCounts.done,\r\n    statusCounts.notdoing,\r\n  ];\r\n\r\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\r\n\r\n  return (\r\n    <div className='content statistics'> \r\n      <h3>Your situation</h3>\r\n      <br />\r\n      <br />\r\n      <span>\r\n          Be proud of your progress.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <ChartContainer\r\n        width={500}\r\n        height={300}\r\n        series={[{ data: uData, label: 'Count', type: 'bar' }]}\r\n        xAxis={[{ scaleType: 'band', data: xLabels }]}\r\n      >\r\n        <BarPlot />\r\n      </ChartContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n*/","map":{"version":3,"names":[],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/pages/statistics/Statistics.page.tsx"],"sourcesContent":["/*import * as React from 'react';\r\nimport { ChartContainer, BarPlot } from '@mui/x-charts';\r\nimport { IActivity } from '../../types/global.typing';\r\n\r\n\r\n\r\ninterface IActivitiesPageProps {\r\n    data: IActivity[];\r\n}\r\n\r\nconst groupActivitiesByStatus = (activities: IActivity[]) => {\r\n  const statusCounts: { [key: string]: number } = {\r\n    new: 0,\r\n    inprogress: 0,\r\n    done: 0,\r\n    notdoing: 0,\r\n  };\r\n\r\n  activities.forEach((activity) => {\r\n    if (activity.status) {\r\n      statusCounts[activity.status.toLowerCase()] += 1;\r\n    }\r\n  });\r\n\r\n  return statusCounts;\r\n};\r\n\r\nconst Statistics: React.FC<IActivitiesPageProps> = ({ data }) => {\r\n  const statusCounts = groupActivitiesByStatus(data);\r\n\r\n  const uData = [\r\n    statusCounts.new,\r\n    statusCounts.inprogress,\r\n    statusCounts.done,\r\n    statusCounts.notdoing,\r\n  ];\r\n\r\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\r\n\r\n  return (\r\n    <div className='content statistics'> \r\n      <h3>Your situation</h3>\r\n      <br />\r\n      <br />\r\n      <span>\r\n          Be proud of your progress.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <ChartContainer\r\n        width={500}\r\n        height={300}\r\n        series={[{ data: uData, label: 'Count', type: 'bar' }]}\r\n        xAxis={[{ scaleType: 'band', data: xLabels }]}\r\n      >\r\n        <BarPlot />\r\n      </ChartContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}