{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\";\nimport * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBars = ({\n  data\n}) => {\n  const getStatusCounts = () => {\n    const counts = {\n      New: 0,\n      InProgress: 0,\n      Done: 0,\n      NotDoingIt: 0\n    };\n    data.forEach(activity => {\n      switch (activity.status) {\n        case 'new':\n          counts.New++;\n          break;\n        case 'inprogress':\n          counts.InProgress++;\n          break;\n        case 'done':\n          counts.Done++;\n          break;\n        case 'notdoingit':\n          counts.NotDoingIt++;\n          break;\n        default:\n          break;\n      }\n    });\n    return counts;\n  };\n  const counts = getStatusCounts();\n  const chartSetting = {\n    yAxis: [{\n      label: 'Number of Activities'\n    }],\n    width: 500,\n    height: 300,\n    // Removed the axisClasses import from here\n    sx: {\n      // [`.${axisClasses.left} .${axisClasses.label}`]: {\n      //   transform: 'translate(-20px, 0)',\n      // },\n    }\n  };\n  const dataset = [{\n    status: 'Activities',\n    New: counts.New,\n    InProgress: counts.InProgress,\n    Done: counts.Done,\n    NotDoingIt: counts.NotDoingIt\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      dataset: dataset,\n      xAxis: [{\n        scaleType: 'band',\n        dataKey: 'status'\n      }],\n      series: [{\n        dataKey: 'New',\n        label: 'New'\n      }, {\n        dataKey: 'InProgress',\n        label: 'InProgress'\n      }, {\n        dataKey: 'Done',\n        label: 'Done'\n      }, {\n        dataKey: 'NotDoingIt',\n        label: 'NotDoingIt'\n      }],\n      ...chartSetting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = MyBars;\nexport default MyBars;\nvar _c;\n$RefreshReg$(_c, \"MyBars\");","map":{"version":3,"names":["React","BarChart","Box","jsxDEV","_jsxDEV","MyBars","data","getStatusCounts","counts","New","InProgress","Done","NotDoingIt","forEach","activity","status","chartSetting","yAxis","label","width","height","sx","dataset","children","xAxis","scaleType","dataKey","series","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\nimport { Box } from '@mui/material';\r\nimport { IActivity } from \"../../types/global.typing\";\r\n\r\ninterface IMyBarsProps {\r\n  data: IActivity[];\r\n}\r\n\r\nconst MyBars: React.FC<IMyBarsProps> = ({ data }) => {\r\n  const getStatusCounts = () => {\r\n    const counts = {\r\n      New: 0,\r\n      InProgress: 0,\r\n      Done: 0,\r\n      NotDoingIt: 0,\r\n    };\r\n\r\n    data.forEach((activity) => {\r\n      switch (activity.status) {\r\n        case 'new':\r\n          counts.New++;\r\n          break;\r\n        case 'inprogress':\r\n          counts.InProgress++;\r\n          break;\r\n        case 'done':\r\n          counts.Done++;\r\n          break;\r\n        case 'notdoingit':\r\n          counts.NotDoingIt++;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return counts;\r\n  };\r\n\r\n  const counts = getStatusCounts();\r\n\r\n  const chartSetting = {\r\n    yAxis: [\r\n      {\r\n        label: 'Number of Activities',\r\n      },\r\n    ],\r\n    width: 500,\r\n    height: 300,\r\n    // Removed the axisClasses import from here\r\n    sx: {\r\n      // [`.${axisClasses.left} .${axisClasses.label}`]: {\r\n      //   transform: 'translate(-20px, 0)',\r\n      // },\r\n    },\r\n  };\r\n\r\n  const dataset = [\r\n    {\r\n      status: 'Activities',\r\n      New: counts.New,\r\n      InProgress: counts.InProgress,\r\n      Done: counts.Done,\r\n      NotDoingIt: counts.NotDoingIt,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <BarChart\r\n        dataset={dataset}\r\n        xAxis={[{ scaleType: 'band', dataKey: 'status' }]}\r\n        series={[\r\n          { dataKey: 'New', label: 'New' },\r\n          { dataKey: 'InProgress', label: 'InProgress' },\r\n          { dataKey: 'Done', label: 'Done' },\r\n          { dataKey: 'NotDoingIt', label: 'NotDoingIt' },\r\n        ]}\r\n        {...chartSetting}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyBars;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpC,MAAMC,MAA8B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAG;MACbC,GAAG,EAAE,CAAC;MACNC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE;IACd,CAAC;IAEDN,IAAI,CAACO,OAAO,CAAEC,QAAQ,IAAK;MACzB,QAAQA,QAAQ,CAACC,MAAM;QACrB,KAAK,KAAK;UACRP,MAAM,CAACC,GAAG,EAAE;UACZ;QACF,KAAK,YAAY;UACfD,MAAM,CAACE,UAAU,EAAE;UACnB;QACF,KAAK,MAAM;UACTF,MAAM,CAACG,IAAI,EAAE;UACb;QACF,KAAK,YAAY;UACfH,MAAM,CAACI,UAAU,EAAE;UACnB;QACF;UACE;MACJ;IACF,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf,CAAC;EAED,MAAMA,MAAM,GAAGD,eAAe,CAAC,CAAC;EAEhC,MAAMS,YAAY,GAAG;IACnBC,KAAK,EAAE,CACL;MACEC,KAAK,EAAE;IACT,CAAC,CACF;IACDC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACX;IACAC,EAAE,EAAE;MACF;MACA;MACA;IAAA;EAEJ,CAAC;EAED,MAAMC,OAAO,GAAG,CACd;IACEP,MAAM,EAAE,YAAY;IACpBN,GAAG,EAAED,MAAM,CAACC,GAAG;IACfC,UAAU,EAAEF,MAAM,CAACE,UAAU;IAC7BC,IAAI,EAAEH,MAAM,CAACG,IAAI;IACjBC,UAAU,EAAEJ,MAAM,CAACI;EACrB,CAAC,CACF;EAED,oBACER,OAAA,CAACF,GAAG;IAAAqB,QAAA,eACFnB,OAAA,CAACH,QAAQ;MACPqB,OAAO,EAAEA,OAAQ;MACjBE,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAS,CAAC,CAAE;MAClDC,MAAM,EAAE,CACN;QAAED,OAAO,EAAE,KAAK;QAAER,KAAK,EAAE;MAAM,CAAC,EAChC;QAAEQ,OAAO,EAAE,YAAY;QAAER,KAAK,EAAE;MAAa,CAAC,EAC9C;QAAEQ,OAAO,EAAE,MAAM;QAAER,KAAK,EAAE;MAAO,CAAC,EAClC;QAAEQ,OAAO,EAAE,YAAY;QAAER,KAAK,EAAE;MAAa,CAAC,CAC9C;MAAA,GACEF;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1EI3B,MAA8B;AA4EpC,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}