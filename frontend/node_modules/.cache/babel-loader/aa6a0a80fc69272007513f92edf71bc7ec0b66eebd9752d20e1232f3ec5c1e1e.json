{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Status = /*#__PURE__*/function (Status) {\n  Status[\"New\"] = \"New\";\n  Status[\"InProgress\"] = \"InProgress\";\n  Status[\"Done\"] = \"Done\";\n  Status[\"NotDoingIt\"] = \"NotDoingIt\";\n  return Status;\n}(Status || {});\nconst StatisticsBarChart = ({\n  data\n}) => {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No profile data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 42\n  }, this);\n  const statusCount = {\n    New: 0,\n    InProgress: 0,\n    Done: 0,\n    NotDoingIt: 0\n  };\n  data.forEach(activity => {\n    const status = activity.status; // Cast the status to Status enum type\n    if (Object.values(Status).includes(status)) {\n      statusCount[status]++;\n    }\n  });\n  const chartDataConfig = {\n    labels: ['New', 'InProgress', 'Done', 'NotDoingIt'],\n    datasets: [{\n      label: 'Count',\n      data: [statusCount.New, statusCount.InProgress, statusCount.Done, statusCount.NotDoingIt],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Status'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Count'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '1200px',\n      margin: 'auto',\n      minHeight: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartDataConfig,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsBarChart, \"xPrYw7zU0CoGCjtGXuWL2zxIwKw=\");\n_c = StatisticsBarChart;\nexport default StatisticsBarChart;\nvar _c;\n$RefreshReg$(_c, \"StatisticsBarChart\");","map":{"version":3,"names":["useState","useEffect","Bar","jsxDEV","_jsxDEV","Status","StatisticsBarChart","data","_s","isLoading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","statusCount","New","InProgress","Done","NotDoingIt","forEach","activity","status","Object","values","includes","chartDataConfig","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","maintainAspectRatio","scales","x","type","title","display","text","y","beginAtZero","style","width","maxWidth","margin","minHeight","options","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { IActivity } from '../../types/global.typing';\r\nimport moment from 'moment';\r\n\r\nenum Status {\r\n  New = 'New',\r\n  InProgress = 'InProgress',\r\n  Done = 'Done',\r\n  NotDoingIt = 'NotDoingIt',\r\n}\r\n\r\ninterface IActivitiesCount {\r\n  New: number;\r\n  InProgress: number;\r\n  Done: number;\r\n  NotDoingIt: number;\r\n}\r\n\r\ninterface IActivitiesGridProps {\r\n  data: IActivity[];\r\n}\r\n\r\nconst StatisticsBarChart: React.FC<IActivitiesGridProps> = ({ data }) => {\r\n  const [isLoading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (!data || data.length === 0) return <p>No profile data</p>;\r\n\r\n  const statusCount: IActivitiesCount = {\r\n    New: 0,\r\n    InProgress: 0,\r\n    Done: 0,\r\n    NotDoingIt: 0,\r\n  };\r\n\r\n  data.forEach((activity) => {\r\n    const status = activity.status as Status; // Cast the status to Status enum type\r\n    if (Object.values(Status).includes(status)) {\r\n      statusCount[status]++;\r\n    }\r\n  });\r\n\r\n  const chartDataConfig = {\r\n    labels: ['New', 'InProgress', 'Done', 'NotDoingIt'],\r\n    datasets: [\r\n      {\r\n        label: 'Count',\r\n        data: [\r\n          statusCount.New,\r\n          statusCount.InProgress,\r\n          statusCount.Done,\r\n          statusCount.NotDoingIt,\r\n        ],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        type: 'category' as const,\r\n        title: {\r\n          display: true,\r\n          text: 'Status',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Count',\r\n        },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', maxWidth: '1200px', margin: 'auto', minHeight: '400px' }}>\r\n      <Bar data={chartDataConfig} options={chartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsBarChart;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAIjCC,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA,EAANA,MAAM;AAkBX,MAAMC,kBAAkD,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAU,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE,oBAAOL,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACvC,IAAI,CAACR,IAAI,IAAIA,IAAI,CAACS,MAAM,KAAK,CAAC,EAAE,oBAAOZ,OAAA;IAAAO,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE7D,MAAME,WAA6B,GAAG;IACpCC,GAAG,EAAE,CAAC;IACNC,UAAU,EAAE,CAAC;IACbC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd,CAAC;EAEDd,IAAI,CAACe,OAAO,CAAEC,QAAQ,IAAK;IACzB,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAgB,CAAC,CAAC;IAC1C,IAAIC,MAAM,CAACC,MAAM,CAACrB,MAAM,CAAC,CAACsB,QAAQ,CAACH,MAAM,CAAC,EAAE;MAC1CP,WAAW,CAACO,MAAM,CAAC,EAAE;IACvB;EACF,CAAC,CAAC;EAEF,MAAMI,eAAe,GAAG;IACtBC,MAAM,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,CAAC;IACnDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdxB,IAAI,EAAE,CACJU,WAAW,CAACC,GAAG,EACfD,WAAW,CAACE,UAAU,EACtBF,WAAW,CAACG,IAAI,EAChBH,WAAW,CAACI,UAAU,CACvB;MACDW,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAmB;QACzBC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR,CAAC;QACDE,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACExC,OAAA;IAAKyC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAtC,QAAA,eACpFP,OAAA,CAACF,GAAG;MAACK,IAAI,EAAEqB,eAAgB;MAACsB,OAAO,EAAEf;IAAa;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACP,EAAA,CA7EIF,kBAAkD;AAAA6C,EAAA,GAAlD7C,kBAAkD;AA+ExD,eAAeA,kBAAkB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}