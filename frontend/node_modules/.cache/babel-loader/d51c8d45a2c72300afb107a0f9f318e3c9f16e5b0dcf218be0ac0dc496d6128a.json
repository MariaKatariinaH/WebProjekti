{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebSovellukset\\\\Loppuprojekti\\\\frontend\\\\src\\\\components\\\\statistics\\\\StatisticsBarChart.component.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { ChartContainer, BarPlot } from '@mui/x-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const [activities, setActivities] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const fetchActivities = async () => {\n      const response = await fetch('http://localhost:5004/api/Activity/Get');\n      const data = await response.json();\n      setActivities(data);\n      setLoading(false);\n    };\n    fetchActivities();\n  }, []);\n  const groupActivitiesByStatus = activities => {\n    const statusCounts = {\n      new: 0,\n      inprogress: 0,\n      done: 0,\n      notdoing: 0\n    };\n    activities.forEach(activity => {\n      if (activity.status) {\n        statusCounts[activity.status.toLowerCase()] += 1;\n      }\n    });\n    return statusCounts;\n  };\n  const statusCounts = groupActivitiesByStatus(activities);\n  const uData = [statusCounts.new, statusCounts.inprogress, statusCounts.done, statusCounts.notdoing];\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your situation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Be proud of your progress.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      width: 500,\n      height: 300,\n      series: [{\n        data: uData,\n        label: 'Count',\n        type: 'bar'\n      }],\n      xAxis: [{\n        scaleType: 'band',\n        data: xLabels\n      }],\n      children: /*#__PURE__*/_jsxDEV(BarPlot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"QUo/oLkcOdllJU1Xvu036Y1MawY=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","ChartContainer","BarPlot","jsxDEV","_jsxDEV","Statistics","_s","activities","setActivities","useState","loading","setLoading","error","setError","useEffect","fetchActivities","response","fetch","data","json","groupActivitiesByStatus","statusCounts","new","inprogress","done","notdoing","forEach","activity","status","toLowerCase","uData","xLabels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","series","label","type","xAxis","scaleType","_c","$RefreshReg$"],"sources":["C:/WebSovellukset/Loppuprojekti/frontend/src/components/statistics/StatisticsBarChart.component.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { ChartContainer, BarPlot } from '@mui/x-charts';\r\nimport { IActivity } from '../../types/global.typing';\r\n\r\nconst Statistics = () => {\r\n  const [activities, setActivities] = React.useState<IActivity[]>([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const fetchActivities = async () => {\r\n      \r\n        const response = await fetch('http://localhost:5004/api/Activity/Get'); \r\n        const data = await response.json();\r\n        setActivities(data);\r\n        setLoading(false);\r\n     \r\n    };\r\n\r\n    fetchActivities();\r\n  }, []);\r\n\r\n  const groupActivitiesByStatus = (activities: IActivity[]) => {\r\n    const statusCounts: { [key: string]: number } = {\r\n      new: 0,\r\n      inprogress: 0,\r\n      done: 0,\r\n      notdoing: 0,\r\n    };\r\n\r\n    activities.forEach((activity) => {\r\n      if (activity.status) {\r\n        statusCounts[activity.status.toLowerCase()] += 1;\r\n      }\r\n    });\r\n\r\n    return statusCounts;\r\n  };\r\n\r\n  const statusCounts = groupActivitiesByStatus(activities);\r\n\r\n  const uData = [\r\n    statusCounts.new,\r\n    statusCounts.inprogress,\r\n    statusCounts.done,\r\n    statusCounts.notdoing,\r\n  ];\r\n\r\n  const xLabels = ['New', 'In Progress', 'Done', 'Not Doing'];\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error fetching data</p>;\r\n\r\n  return (\r\n    <div className='content statistics'> \r\n      <h3>Your situation</h3>\r\n      <br />\r\n      <br />\r\n      <span>\r\n          Be proud of your progress.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <ChartContainer\r\n        width={500}\r\n        height={300}\r\n        series={[{ data: uData, label: 'Count', type: 'bar' }]}\r\n        xAxis={[{ scaleType: 'band', data: xLabels }]}\r\n      >\r\n        <BarPlot />\r\n      </ChartContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}